{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\19729\\\\Desktop\\\\SMU\\\\Repositories\\\\link-it\\\\client\\\\src\\\\pages\\\\eventList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { ListItem, List } from \"../List\"; //import DeleteBtn from \"../DeleteBtn\";\n\nimport { Link } from \"react-router-dom\"; //import { useStoreContext } from \"../../utils/GlobalState\";\n\nimport { REMOVE_POST, UPDATE_POSTS, LOADING } from \"../../utils/actions\";\nimport API from \"../../utils/API\";\n\nfunction PostsList() {\n  _s();\n\n  const [state, dispatch] = useStoreContext(); // const removePost = id => {\n  //   API.deletePost(id)\n  //     .then(() => {\n  //       dispatch({\n  //         type: REMOVE_POST,\n  //         _id: id\n  //       });\n  //     })\n  //     .catch(err => console.log(err));\n  // };\n\n  const getPosts = () => {\n    dispatch({\n      type: LOADING\n    });\n    API.getPosts().then(results => {\n      dispatch({\n        type: UPDATE_POSTS,\n        posts: results.data\n      });\n    }).catch(err => console.log(err));\n  };\n\n  useEffect(() => {\n    getPosts();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, \"All Blog Posts\"), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"mb-5 mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"Click on a post to view\"), state.posts.length ? /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, state.posts.map(post => /*#__PURE__*/React.createElement(ListItem, {\n    key: post._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/posts/\" + post._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, post.title, \" by \", post.author)), /*#__PURE__*/React.createElement(DeleteBtn, {\n    onClick: () => removePost(post._id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  })))) : /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"You haven't added any posts yet!\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"favorites\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, \"View favorites\")));\n}\n\n_s(PostsList, \"rQAXY7WJETFBPd/2qDFOpQS/df8=\", true);\n\n_c = PostsList;\nexport default EventList; // import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { Card } from 'semantic-ui-react';\n// import CreateEvent from \"../components/CreateEvent\";\n// import Navbar from \"../components/Navbar\";\n// function Events() {\n//   const [eventCreate, setEventCreate] = useState({})\n//     setEventCreate({...eventCreate, [name]: value})\n//     axios.get('/url')\n//     .then(function (response) {\n//     })\n// // The REST API endpoint\n// const API_URL = 'https://jsonplaceholder.typicode.com/posts';\n// const Events = () => {\n//   // At the beginning, posts is an empty array\n//   const [posts, setPosts] = useState([]);\n//   // Define the function that fetches the data from API\n//   const fetchData = async () => {\n//     const { data } = await axios.get(API_URL);\n//     setPosts(data);\n//   };\n//   // Trigger the fetchData after the initial render by using the useEffect hook\n//   useEffect(() => {\n//     fetchData();\n//   }, []);\n//   return (\n//     <div className=\"wrapper\">\n//       {posts.length > 0 ? (\n//         <div className=\"content\">\n//           {posts.map((post) => (\n//             <div className=\"post\">\n//               <h2>{post.title}</h2>\n//               <p>{post.body}</p>\n//             </div>\n//           ))}\n//         </div>\n//       ) : (\n//         <p className=\"loading\">Loading... </p>\n//       )}\n//     </div>\n//   );\n// };\n// }\n// export default EventList;\n// const src = '/images/wireframe/white-image.png'\n// const EventList = () => (\n//   <Card.Group itemsPerRow={4}>\n//     <Card color='blue' image={src} />\n//     <Card color='violet' image={src} />\n//     <Card color='yellow' image={src} />\n//     <Card color='green' image={src} />\n//     <Card color='blue' image={src} />\n//     <Card color='violet' image={src} />\n//     <Card color='yellow' image={src} />\n//     <Card color='green' image={src} />\n//     <Card color='blue' image={src} />\n//     <Card color='violet' image={src} />\n//     <Card color='yellow' image={src} />\n//     <Card color='green' image={src} />\n//   </Card.Group>\n// )\n// export default EventList\n\nvar _c;\n\n$RefreshReg$(_c, \"PostsList\");","map":{"version":3,"sources":["C:/Users/19729/Desktop/SMU/Repositories/link-it/client/src/pages/eventList.js"],"names":["React","useEffect","ListItem","List","Link","REMOVE_POST","UPDATE_POSTS","LOADING","API","PostsList","state","dispatch","useStoreContext","getPosts","type","then","results","posts","data","catch","err","console","log","length","map","post","_id","title","author","removePost","EventList"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { ListItem, List } from \"../List\";\n//import DeleteBtn from \"../DeleteBtn\";\nimport { Link } from \"react-router-dom\";\n//import { useStoreContext } from \"../../utils/GlobalState\";\nimport { REMOVE_POST, UPDATE_POSTS, LOADING } from \"../../utils/actions\";\nimport API from \"../../utils/API\";\n\nfunction PostsList() {\n  const [state, dispatch] = useStoreContext();\n\n  // const removePost = id => {\n  //   API.deletePost(id)\n  //     .then(() => {\n  //       dispatch({\n  //         type: REMOVE_POST,\n  //         _id: id\n  //       });\n  //     })\n  //     .catch(err => console.log(err));\n  // };\n\n  const getPosts = () => {\n    dispatch({ type: LOADING });\n    API.getPosts()\n      .then(results => {\n        dispatch({\n          type: UPDATE_POSTS,\n          posts: results.data\n        });\n      })\n      .catch(err => console.log(err));\n  };\n\n  useEffect(() => {\n    getPosts();\n  }, []);\n\n  return (\n    <div>\n      <h1>All Blog Posts</h1>\n      <h3 className=\"mb-5 mt-5\">Click on a post to view</h3>\n      {state.posts.length ? (\n        <List>\n          {state.posts.map(post => (\n            <ListItem key={post._id}>\n              <Link to={\"/posts/\" + post._id}>\n                <strong>\n                  {post.title} by {post.author}\n                </strong>\n              </Link>\n              <DeleteBtn onClick={() => removePost(post._id)} />\n            </ListItem>\n          ))}\n        </List>\n      ) : (\n        <h3>You haven't added any posts yet!</h3>\n      )}\n      <div className=\"mt-5\">\n        <Link to=\"favorites\">View favorites</Link>\n      </div>\n    </div>\n  );\n}\n\nexport default EventList;\n\n\n\n\n\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { Card } from 'semantic-ui-react';\n// import CreateEvent from \"../components/CreateEvent\";\n// import Navbar from \"../components/Navbar\";\n\n\n// function Events() {\n//   const [eventCreate, setEventCreate] = useState({})\n//     setEventCreate({...eventCreate, [name]: value})\n//     axios.get('/url')\n//     .then(function (response) {\n\n//     })\n\n\n// // The REST API endpoint\n// const API_URL = 'https://jsonplaceholder.typicode.com/posts';\n\n// const Events = () => {\n//   // At the beginning, posts is an empty array\n//   const [posts, setPosts] = useState([]);\n\n//   // Define the function that fetches the data from API\n//   const fetchData = async () => {\n//     const { data } = await axios.get(API_URL);\n//     setPosts(data);\n//   };\n\n//   // Trigger the fetchData after the initial render by using the useEffect hook\n//   useEffect(() => {\n//     fetchData();\n//   }, []);\n\n//   return (\n//     <div className=\"wrapper\">\n//       {posts.length > 0 ? (\n//         <div className=\"content\">\n//           {posts.map((post) => (\n//             <div className=\"post\">\n//               <h2>{post.title}</h2>\n//               <p>{post.body}</p>\n//             </div>\n//           ))}\n//         </div>\n//       ) : (\n//         <p className=\"loading\">Loading... </p>\n//       )}\n//     </div>\n//   );\n// };\n// }\n\n// export default EventList;\n\n// const src = '/images/wireframe/white-image.png'\n\n// const EventList = () => (\n//   <Card.Group itemsPerRow={4}>\n//     <Card color='blue' image={src} />\n//     <Card color='violet' image={src} />\n//     <Card color='yellow' image={src} />\n//     <Card color='green' image={src} />\n//     <Card color='blue' image={src} />\n//     <Card color='violet' image={src} />\n//     <Card color='yellow' image={src} />\n//     <Card color='green' image={src} />\n//     <Card color='blue' image={src} />\n//     <Card color='violet' image={src} />\n//     <Card color='yellow' image={src} />\n//     <Card color='green' image={src} />\n//   </Card.Group>\n// )\n\n// export default EventList\n"]},"metadata":{},"sourceType":"module"}