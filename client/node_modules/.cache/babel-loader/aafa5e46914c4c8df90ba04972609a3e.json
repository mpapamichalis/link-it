{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\19729\\\\Desktop\\\\SMU\\\\Repositories\\\\link-it\\\\client\\\\src\\\\utils\\\\GlobalState.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useReducer, useContext } from \"react\";\nimport { SET_CURRENT_POST, REMOVE_POST, UPDATE_POSTS, ADD_POST, LOADING } from \"./actions\";\nconst StoreContext = /*#__PURE__*/createContext();\nconst {\n  Provider\n} = StoreContext;\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case SET_CURRENT_POST:\n      return { ...state,\n        currentPost: action.post,\n        loading: false\n      };\n\n    case UPDATE_POSTS:\n      return { ...state,\n        posts: [...action.posts],\n        loading: false\n      };\n\n    case ADD_POST:\n      return { ...state,\n        posts: [action.post, ...state.posts],\n        loading: false\n      };\n\n    case REMOVE_POST:\n      return { ...state,\n        posts: state.posts.filter(post => {\n          return post._id !== action._id;\n        })\n      };\n\n    case LOADING:\n      return { ...state,\n        loading: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst StoreProvider = ({\n  value = [],\n  ...props\n}) => {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, {\n    posts: [],\n    currentPost: {\n      //_id: 0,\n      title: \"\",\n      where: \"\",\n      total: \"\",\n      description: \"\"\n    },\n    loading: false\n  });\n  return /*#__PURE__*/React.createElement(Provider, Object.assign({\n    value: [state, dispatch]\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 10\n    }\n  }));\n};\n\n_s(StoreProvider, \"N7c/Vwv8/CfXxLD90pRslVIkBBw=\");\n\n_c = StoreProvider;\n\nconst useStoreContext = () => {\n  _s2();\n\n  return useContext(StoreContext);\n};\n\n_s2(useStoreContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport { StoreProvider, useStoreContext };\n\nvar _c;\n\n$RefreshReg$(_c, \"StoreProvider\");","map":{"version":3,"sources":["C:/Users/19729/Desktop/SMU/Repositories/link-it/client/src/utils/GlobalState.js"],"names":["React","createContext","useReducer","useContext","SET_CURRENT_POST","REMOVE_POST","UPDATE_POSTS","ADD_POST","LOADING","StoreContext","Provider","reducer","state","action","type","currentPost","post","loading","posts","filter","_id","StoreProvider","value","props","dispatch","title","where","total","description","useStoreContext"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,UAA3C,QAA6D,OAA7D;AACA,SACEC,gBADF,EAEEC,WAFF,EAGEC,YAHF,EAIEC,QAJF,EAKEC,OALF,QAMO,WANP;AAQA,MAAMC,YAAY,gBAAGR,aAAa,EAAlC;AACA,MAAM;AAAES,EAAAA;AAAF,IAAeD,YAArB;;AAEA,MAAME,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACA,SAAKV,gBAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELG,QAAAA,WAAW,EAAEF,MAAM,CAACG,IAFf;AAGLC,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAMF,SAAKX,YAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELM,QAAAA,KAAK,EAAE,CAAC,GAAGL,MAAM,CAACK,KAAX,CAFF;AAGLD,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAMF,SAAKV,QAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELM,QAAAA,KAAK,EAAE,CAACL,MAAM,CAACG,IAAR,EAAc,GAAGJ,KAAK,CAACM,KAAvB,CAFF;AAGLD,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAMF,SAAKZ,WAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELM,QAAAA,KAAK,EAAEN,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAoBH,IAAD,IAAU;AAClC,iBAAOA,IAAI,CAACI,GAAL,KAAaP,MAAM,CAACO,GAA3B;AACD,SAFM;AAFF,OAAP;;AAQF,SAAKZ,OAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELK,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAKF;AACE,aAAOL,KAAP;AAtCF;AAwCD,CAzCD;;AA2CA,MAAMS,aAAa,GAAG,CAAC;AAAEC,EAAAA,KAAK,GAAG,EAAV;AAAc,KAAGC;AAAjB,CAAD,KAA8B;AAAA;;AAClD,QAAM,CAACX,KAAD,EAAQY,QAAR,IAAoBtB,UAAU,CAACS,OAAD,EAAU;AAC5CO,IAAAA,KAAK,EAAE,EADqC;AAE5CH,IAAAA,WAAW,EAAE;AACX;AACAU,MAAAA,KAAK,EAAE,EAFI;AAGXC,MAAAA,KAAK,EAAE,EAHI;AAIXC,MAAAA,KAAK,EAAE,EAJI;AAKXC,MAAAA,WAAW,EAAE;AALF,KAF+B;AAS5CX,IAAAA,OAAO,EAAE;AATmC,GAAV,CAApC;AAYA,sBAAO,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE,CAACL,KAAD,EAAQY,QAAR;AAAjB,KAAwCD,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAdD;;GAAMF,a;;KAAAA,a;;AAgBN,MAAMQ,eAAe,GAAG,MAAM;AAAA;;AAC5B,SAAO1B,UAAU,CAACM,YAAD,CAAjB;AACD,CAFD;;IAAMoB,e;;AAIN,SAASR,aAAT,EAAwBQ,eAAxB","sourcesContent":["import React, { createContext, useReducer, useContext } from \"react\";\r\nimport {\r\n  SET_CURRENT_POST,\r\n  REMOVE_POST,\r\n  UPDATE_POSTS,\r\n  ADD_POST,\r\n  LOADING\r\n} from \"./actions\";\r\n\r\nconst StoreContext = createContext();\r\nconst { Provider } = StoreContext;\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n  case SET_CURRENT_POST:\r\n    return {\r\n      ...state,\r\n      currentPost: action.post,\r\n      loading: false\r\n    };\r\n\r\n  case UPDATE_POSTS:\r\n    return {\r\n      ...state,\r\n      posts: [...action.posts],\r\n      loading: false\r\n    };\r\n\r\n  case ADD_POST:\r\n    return {\r\n      ...state,\r\n      posts: [action.post, ...state.posts],\r\n      loading: false\r\n    };\r\n\r\n  case REMOVE_POST:\r\n    return {\r\n      ...state,\r\n      posts: state.posts.filter((post) => {\r\n        return post._id !== action._id; \r\n      })\r\n    };\r\n\r\n  \r\n  case LOADING:\r\n    return {\r\n      ...state,\r\n      loading: true\r\n    };\r\n\r\n  default:\r\n    return state;\r\n  }\r\n};\r\n\r\nconst StoreProvider = ({ value = [], ...props }) => {\r\n  const [state, dispatch] = useReducer(reducer, {\r\n    posts: [],\r\n    currentPost: {\r\n      //_id: 0,\r\n      title: \"\",\r\n      where: \"\",\r\n      total: \"\",\r\n      description: \"\"\r\n    },\r\n    loading: false\r\n  });\r\n\r\n  return <Provider value={[state, dispatch]} {...props} />;\r\n};\r\n\r\nconst useStoreContext = () => {\r\n  return useContext(StoreContext);\r\n};\r\n\r\nexport { StoreProvider, useStoreContext };\r\n"]},"metadata":{},"sourceType":"module"}